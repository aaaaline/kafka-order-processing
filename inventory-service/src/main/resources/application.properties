# inventory-service/src/main/resources/application.properties

spring.application.name=inventory-service

# --- Porta do Servidor ---
server.port=8081

# --- Banco de Dados (mesmo do order-service) ---
spring.datasource.url=jdbc:postgresql://localhost:5432/ecommerce_db
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# --- JPA / Hibernate ---
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate

# --- Kafka Consumer ---
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=inventory_group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# --- Propriedades do Deserializer JSON ---
spring.kafka.consumer.properties.spring.json.trusted.packages=*
# Diz ao deserializer para IGNORAR o cabeçalho de tipo da mensagem
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.kafka_order_processing.inventoryservice.model.Order

# --- Kafka Producer ---
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# Deve usar JsonSerializer para converter o objeto DTO para o formato JSON
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer